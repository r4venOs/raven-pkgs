post_install() {
    # Auto-install for the user who ran pacman
    if [ -n "$SUDO_USER" ]; then
        USER_HOME=$(getent passwd "$SUDO_USER" | cut -d: -f6)
        
        # Create config directory if it doesn't exist
        if [ ! -d "$USER_HOME/.config/qtile" ]; then
            sudo -u "$SUDO_USER" mkdir -p "$USER_HOME/.config/qtile"
            sudo -u "$SUDO_USER" cp -r /etc/skel/.config/qtile/* "$USER_HOME/.config/qtile/"
            
            # Make autostart.sh executable
            if [ -f "$USER_HOME/.config/qtile/autostart.sh" ]; then
                sudo -u "$SUDO_USER" chmod +x "$USER_HOME/.config/qtile/autostart.sh"
            fi
            
            echo "✓ Qtile configuration installed to $USER_HOME/.config/qtile/"
        else
            # Backup existing config
            if [ ! -d "$USER_HOME/.config/qtile.backup" ]; then
                sudo -u "$SUDO_USER" cp -r "$USER_HOME/.config/qtile" "$USER_HOME/.config/qtile.backup"
                echo "✓ Existing config backed up to $USER_HOME/.config/qtile.backup"
            fi
            
            # Ask to overwrite
            echo ""
            echo "Existing qtile configuration found."
            read -p "Overwrite with Raven config? (y/N): " overwrite
            if [[ "$overwrite" =~ ^[Yy]$ ]]; then
                sudo -u "$SUDO_USER" cp -r /etc/skel/.config/qtile/* "$USER_HOME/.config/qtile/"
                
                # Make autostart.sh executable
                if [ -f "$USER_HOME/.config/qtile/autostart.sh" ]; then
                    sudo -u "$SUDO_USER" chmod +x "$USER_HOME/.config/qtile/autostart.sh"
                fi
                
                echo "✓ Configuration updated"
            else
                echo "Configuration NOT updated. Your existing config is preserved."
                echo "To manually update: cp -r /etc/skel/.config/qtile/* ~/.config/qtile/"
            fi
        fi
    fi
    
    cat << EOF

╔════════════════════════════════════════════════════════════╗
║           Raven Qtile Configuration Installed              ║
╚════════════════════════════════════════════════════════════╝

Recommended packages (install with pacman -S):
  • picom          - Compositor for transparency
  • nitrogen       - Wallpaper manager
  • rofi           - Application launcher
  • kitty          - Terminal emulator
  • dunst          - Notification daemon

Quick start:
  1. Log out of current session
  2. Select Qtile from display manager
  3. Log in

Default keybindings:
  • Mod+Return       - Terminal
  • Mod+Shift+Return - Rofi launcher
  • Mod+q            - Close window
  • Mod+Shift+r      - Restart Qtile

For more info: https://github.com/r4venOs/raven-qtile

EOF
}

post_upgrade() {
    cat << EOF

╔════════════════════════════════════════════════════════════╗
║           Raven Qtile Configuration Updated                ║
╚════════════════════════════════════════════════════════════╝

✓ Configuration updated in /etc/skel/.config/qtile/

IMPORTANT: Your existing configuration was NOT modified.

To update your personal config:
  1. Backup current: cp -r ~/.config/qtile ~/.config/qtile.backup
  2. Update: cp -r /etc/skel/.config/qtile ~/.config/
  3. Restart Qtile: Mod+Shift+r

Or merge changes manually from /etc/skel/.config/qtile/

EOF
}

pre_remove() {
    cat << EOF

Removing Raven Qtile configuration...
Your personal config in ~/.config/qtile will NOT be removed.

EOF
}

post_remove() {
    cat << EOF

Raven Qtile configuration removed from /etc/skel/
Your personal configuration remains in ~/.config/qtile

EOF
}
